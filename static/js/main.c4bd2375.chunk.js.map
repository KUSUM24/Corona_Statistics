{"version":3,"sources":["Common/Loader.jsx","App.js","index.js"],"names":["Loader","className","class","App","useState","loading","setLoading","setCountryList","setData","setWorldData","setHistoricData","setHistoricList","setHistoricWorld","setDateList","countryName","useEffect","a","fetch","method","res","json","sort","b","active","resWorld","jsonWorld","resHistoric","jsonHistoric","console","log","resHistoricWorld","jsonHistoricWorld","dateArray","Object","keys","cases","reverse","fetchData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAGaA,G,MAAS,WACpB,OACE,qBAAKC,UAAU,cAAf,SACE,sBAAKC,MAAM,cAAX,UACE,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,+BCmIOC,G,mFA1II,WAAO,IAAD,EACOC,oBAAS,GADhB,mBAChBC,EADgB,KACPC,EADO,OAEeF,mBAAS,IAFxB,mBAEHG,GAFG,aAGCH,mBAAS,IAHV,mBAGVI,GAHU,aAIWJ,mBAAS,IAJpB,mBAILK,GAJK,aAKiBL,mBAAS,IAL1B,mBAKFM,GALE,aAMiBN,mBAAS,IAN1B,mBAMFO,GANE,aAOmBP,mBAAS,IAP5B,mBAODQ,GAPC,aAQSR,mBAAS,IARlB,mBAQNS,GARM,aASWT,mBAAS,UATpB,gCAUqBA,mBAAS,KAV9B,gCAWeA,mBAAS,KAXxB,mBAWhBU,EAXgB,UAavBC,qBAAU,WACRT,GAAW,GACI,uCAAG,4CAAAU,EAAA,sEACAC,MAAM,yCAA0C,CAC9DC,OAAQ,QAFM,cACZC,EADY,gBAICA,EAAIC,OAJL,cAIZA,EAJY,OAKhBb,EAAea,EAAKC,MAAK,SAACL,EAAGM,GAAJ,OAAUA,EAAEC,OAASP,EAAEO,WAChDf,EAAQY,GANQ,UAOKH,MAAM,mCAAoC,CAC7DC,OAAQ,QARM,eAOZM,EAPY,iBAUMA,EAASJ,OAVf,eAUZK,EAVY,OAWhBhB,EAAagB,GAXG,UAYQR,MAAM,0CAA2C,CACvEC,OAAQ,QAbM,eAYZQ,EAZY,iBAeSA,EAAYN,OAfrB,eAeZO,EAfY,OAgBhBjB,EAAgBiB,GAChBhB,EAAgBgB,GAChBC,QAAQC,IAAIF,GAlBI,UAmBaV,MAC3B,8CACA,CACEC,OAAQ,QAtBI,eAmBZY,EAnBY,iBAyBcA,EAAiBV,OAzB/B,QAyBZW,EAzBY,OA0BZC,EAAYC,OAAOC,KAAKH,EAAkBI,OAC9CtB,EAAYmB,EAAUI,WACtBxB,EAAiBmB,GACjBzB,GAAW,GA7BK,4CAAH,oDA+Bf+B,KACC,IAyCH,OADAT,QAAQC,IAAIf,GAEV,mCACGT,EACC,mCACE,cAAC,EAAD,MAGF,4C,MCjGRiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c4bd2375.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles/loader.css\";\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <div class=\"lds-roller \">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport { Loader } from \"./Common/Loader\";\nimport { Main } from \"./Components/Main\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Historic } from \"./Components/Historic\";\nimport { Country } from \"./Components/Country\";\n\nexport const App = () => {\n  const [loading, setLoading] = useState(true);\n  const [countryList, setCountryList] = useState([]);\n  const [data, setData] = useState([]);\n  const [worldData, setWorldData] = useState({});\n  const [historicData, setHistoricData] = useState({});\n  const [historicList, setHistoricList] = useState({});\n  const [historicWorld, setHistoricWorld] = useState({});\n  const [dateList, setDateList] = useState([]);\n  const [sortValue, setSortValue] = useState(\"active\");\n  const [oneCountryData, setOneCountryData] = useState({});\n  const [countryName, setCountryName] = useState(\"\");\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchData = async () => {\n      let res = await fetch(\"https://corona.lmao.ninja/v2/countries\", {\n        method: \"GET\",\n      });\n      let json = await res.json();\n      setCountryList(json.sort((a, b) => b.active - a.active));\n      setData(json);\n      let resWorld = await fetch(\"https://corona.lmao.ninja/v2/all\", {\n        method: \"GET\",\n      });\n      let jsonWorld = await resWorld.json();\n      setWorldData(jsonWorld);\n      let resHistoric = await fetch(\"https://corona.lmao.ninja/v2/historical\", {\n        method: \"GET\",\n      });\n      let jsonHistoric = await resHistoric.json();\n      setHistoricData(jsonHistoric);\n      setHistoricList(jsonHistoric);\n      console.log(jsonHistoric);\n      let resHistoricWorld = await fetch(\n        \"https://corona.lmao.ninja/v2/historical/all\",\n        {\n          method: \"GET\",\n        }\n      );\n      let jsonHistoricWorld = await resHistoricWorld.json();\n      let dateArray = Object.keys(jsonHistoricWorld.cases);\n      setDateList(dateArray.reverse());\n      setHistoricWorld(jsonHistoricWorld);\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  const handleSearch = (searchText) => {\n    let reg = new RegExp(searchText, \"i\");\n    let countryListNew = data.filter((c) => c.country.match(reg));\n    setCountryList(countryListNew);\n  };\n  const handleHistoricSearch = (searchText) => {\n    let reg = new RegExp(searchText, \"i\");\n    let newHistoric = historicList.filter((c) => c.country.match(reg));\n    setHistoricData(newHistoric);\n  };\n  const handleSort = (sortStatus) => {\n    let countryListNew;\n    if (sortStatus == \"countryName\") {\n      countryListNew = data.sort((a, b) => (a.country > b.country ? 1 : -1));\n    } else if (sortStatus == \"newCases\") {\n      countryListNew = data.sort((a, b) => b.todayCases - a.todayCases);\n    } else if (sortStatus == \"total\") {\n      countryListNew = data.sort((a, b) => b.cases - a.cases);\n    } else if (sortStatus == \"active\") {\n      countryListNew = data.sort((a, b) => b.active - a.active);\n    } else if (sortStatus == \"recovered\") {\n      countryListNew = data.sort((a, b) => b.recovered - a.recovered);\n    } else if (sortStatus == \"deaths\") {\n      countryListNew = data.sort((a, b) => b.deaths - a.deaths);\n    } else if (sortStatus == \"tests\") {\n      countryListNew = data.sort((a, b) => b.tests - a.tests);\n    }\n    console.log(countryListNew);\n    setCountryList([...countryListNew]);\n    setSortValue(sortStatus);\n  };\n  const handleCountry = (countryName) => {\n    setCountryName(countryName);\n    data.map((item) => {\n      if (item.country == countryName) {\n        setOneCountryData(item);\n      }\n    });\n  };\n  console.log(countryName);\n  return (\n    <>\n      {loading ? (\n        <>\n          <Loader />\n        </>\n      ) : (\n        <div>Hello</div>\n        // <Router>\n        //   <Switch>\n        //     <Route\n        //       path=\"/historic\"\n        //       render={(props) => (\n        //         <Historic\n        //           historicData={historicData}\n        //           historicWorld={historicWorld}\n        //           dateList={dateList}\n        //           getSearch={handleHistoricSearch}\n        //           {...props}\n        //         />\n        //       )}\n        //     />\n        //     <Route\n        //       exact\n        //       path=\"/\"\n        //       render={(props) => (\n        //         <Main\n        //           countryList={countryList}\n        //           worldData={worldData}\n        //           getSearch={handleSearch}\n        //           sortStatus={handleSort}\n        //           sortValue={sortValue}\n        //           getCountryName={handleCountry}\n        //           {...props}\n        //         />\n        //       )}\n        //     />\n        //     <Route\n        //       path={`/${countryName}`}\n        //       render={(props) => (\n        //         <Country oneCountryData={oneCountryData} {...props} />\n        //       )}\n        //     />\n        //   </Switch>\n        // </Router>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}