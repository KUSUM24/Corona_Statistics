{"version":3,"sources":["Common/Loader.jsx","Components/Main/Header.jsx","Components/Main/MainTable.jsx","Components/Main.js","Components/Historic/Header.jsx","Components/Historic/HistoricTable.jsx","Components/Historic.jsx","Components/Country/Header.jsx","Components/Country/CountryCard.jsx","Components/Country.jsx","App.js","index.js"],"names":["Loader","className","class","Header","getSearch","searchRef","useRef","Navbar","bg","expand","style","boxShadow","marginTop","Brand","href","Toggle","aria-controls","Collapse","id","Nav","to","Form","inline","FormControl","type","ref","onChange","current","value","placeholder","MainTable","countryList","worldData","sortStatus","sortValue","getCountryName","Table","striped","responsive","bordered","hover","variant","onClick","cursor","backgroundColor","color","todayCases","toLocaleString","active","cases","recovered","deaths","tests","map","item","index","country","border","borderColor","width","Main","HistoricTable","historicData","historicWorld","dateList","useState","currentDate","setCurrentDate","console","log","fontSize","DropdownButton","title","date","Dropdown","Item","handleCurrentdate","data","timeline","Historic","CountryCard","oneCountryData","Row","Col","Card","Body","todayRecovered","todayDeaths","critical","oneCasePerPeople","activePerOneMillion","casesPerOneMillion","recoveredPerOneMillion","deathsPerOneMillion","testsPerOneMillion","Country","App","loading","setLoading","setCountryList","setData","setWorldData","setHistoricData","historicList","setHistoricList","setHistoricWorld","setDateList","setSortValue","setOneCountryData","countryName","setCountryName","useEffect","a","fetch","method","res","json","sort","b","resWorld","jsonWorld","resHistoric","jsonHistoric","resHistoricWorld","jsonHistoricWorld","dateArray","Object","keys","reverse","fetchData","handleSearch","searchText","reg","RegExp","countryListNew","filter","c","match","handleHistoricSearch","newHistoric","handleSort","handleCountry","exact","path","render","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50e2e4d8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles/loader.css\";\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <div class=\"lds-roller \">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport \"../../Common/styles/header.css\";\r\n\r\nexport const Header = ({ getSearch }) => {\r\n  let searchRef = useRef();\r\n  return (\r\n    <>\r\n      <Navbar\r\n        bg=\"light\"\r\n        expand=\"lg\"\r\n        style={{\r\n          boxShadow: \"0px 0px 10px 5px gray\",\r\n          marginTop: \"0.5%\",\r\n        }}\r\n      >\r\n        <Navbar.Brand href=\"/\">Corona Live Statistics</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\r\n          <Nav className=\"mr-auto\">\r\n            <Link to=\"/historic\">\r\n              <div className=\"header-button btn btn-primary \">Historic</div>\r\n            </Link>\r\n          </Nav>\r\n          <Form inline>\r\n            <FormControl\r\n              type=\"text\"\r\n              ref={searchRef}\r\n              onChange={() => getSearch(searchRef.current.value)}\r\n              placeholder=\"Search Country\"\r\n              className=\"mr-sm-2\"\r\n            />\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport const MainTable = ({\r\n  countryList,\r\n  worldData,\r\n  sortStatus,\r\n  sortValue,\r\n  getCountryName,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Table striped responsive bordered hover variant=\"primary\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th\r\n              onClick={() => sortStatus(\"countryName\")}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                Country Name\r\n                {sortValue == \"countryName\" && <ImportExportIcon />}\r\n              </div>\r\n            </th>\r\n            <th\r\n              onClick={() => sortStatus(\"newCases\")}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                New Cases\r\n                {sortValue == \"newCases\" && <ImportExportIcon />}\r\n              </div>\r\n            </th>\r\n            <th\r\n              onClick={() => sortStatus(\"active\")}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                Active Cases {sortValue == \"active\" && <ImportExportIcon />}\r\n              </div>\r\n            </th>\r\n            <th\r\n              onClick={() => sortStatus(\"total\")}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                Total Cases {sortValue == \"total\" && <ImportExportIcon />}\r\n              </div>\r\n            </th>\r\n\r\n            <th\r\n              onClick={() => sortStatus(\"recovered\")}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                Recovered Cases{\" \"}\r\n                {sortValue == \"recovered\" && <ImportExportIcon />}\r\n              </div>\r\n            </th>\r\n            <th\r\n              onClick={() => sortStatus(\"deaths\")}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                Deaths {sortValue == \"deaths\" && <ImportExportIcon />}\r\n              </div>\r\n            </th>\r\n            <th\r\n              onClick={() => sortStatus(\"tests\")}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                Total Tests {sortValue == \"tests\" && <ImportExportIcon />}\r\n              </div>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr style={{ backgroundColor: \"#dc3545\", color: \"white\" }}>\r\n            <td>1</td>\r\n            <td>World</td>\r\n            <td>{worldData.todayCases.toLocaleString()}</td>\r\n            <td>{worldData.active.toLocaleString()}</td>\r\n            <td>{worldData.cases.toLocaleString()}</td>\r\n            <td>{worldData.recovered.toLocaleString()}</td>\r\n            <td>{worldData.deaths.toLocaleString()}</td>\r\n            <td>{worldData.tests.toLocaleString()}</td>\r\n          </tr>\r\n          {countryList.map((item, index) => {\r\n            return (\r\n              <tr>\r\n                <td>{index + 2}</td>\r\n                <td onClick={() => getCountryName(item.country)}>\r\n                  <Link\r\n                    to={`/${item.country}`}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"black\",\r\n                      border: \"1px solid transparent\",\r\n                      borderColor: \"transparent\",\r\n                      width: \"100% !important\",\r\n                    }}\r\n                  >\r\n                    {item.country}\r\n                  </Link>\r\n                </td>\r\n                <td>{item.todayCases.toLocaleString()}</td>\r\n                <td>{item.active.toLocaleString()}</td>\r\n                <td>{item.cases.toLocaleString()}</td>\r\n                <td>{item.recovered.toLocaleString()}</td>\r\n                <td>{item.deaths.toLocaleString()}</td>\r\n                <td>{item.tests.toLocaleString()}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Header } from \"./Main/Header\";\r\nimport { MainTable } from \"./Main/MainTable\";\r\n\r\nexport const Main = ({\r\n  countryList,\r\n  worldData,\r\n  getSearch,\r\n  sortStatus,\r\n  sortValue,\r\n  getCountryName,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Header getSearch={getSearch} />\r\n      <MainTable\r\n        countryList={countryList}\r\n        worldData={worldData}\r\n        sortStatus={sortStatus}\r\n        sortValue={sortValue}\r\n        getCountryName={getCountryName}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport \"../../Common/styles/header.css\";\r\n\r\nexport const Header = ({ getSearch }) => {\r\n  let searchRef = useRef();\r\n\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        bg=\"light\"\r\n        expand=\"lg\"\r\n        style={{ boxShadow: \"0px 0px 10px 5px gray\", marginTop: \"0.5%\" }}\r\n      >\r\n        <Navbar.Brand href=\"/\">Corona Live Statistics</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\r\n          <Nav className=\"mr-auto\">\r\n            <Link to=\"/Corona_Statistics\">\r\n              <div className=\"header-button btn btn-primary\">Home</div>\r\n            </Link>\r\n          </Nav>\r\n          <Form inline>\r\n            <FormControl\r\n              type=\"text\"\r\n              ref={searchRef}\r\n              onChange={() => getSearch(searchRef.current.value)}\r\n              placeholder=\"Search Country\"\r\n              className=\"mr-sm-2\"\r\n            />\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Dropdown, DropdownButton, Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const HistoricTable = ({\r\n  historicData,\r\n  historicWorld,\r\n  dateList,\r\n  getCountryName,\r\n}) => {\r\n  const [currentDate, setCurrentDate] = useState(dateList[0]);\r\n  const handleCurrentdate = (date) => {\r\n    setCurrentDate(date);\r\n  };\r\n  console.log(historicData);\r\n  // console.log(dateList[0]);\r\n  const makeTable = (data, index) => {\r\n    return (\r\n      <>\r\n        <tr>\r\n          <td>{index + 2}</td>\r\n          <td onClick={() => getCountryName(data.country)}>\r\n            <Link\r\n              to={`/${data.country}`}\r\n              style={{\r\n                cursor: \"pointer\",\r\n                color: \"black\",\r\n                border: \"1px solid transparent\",\r\n                borderColor: \"transparent\",\r\n                width: \"100% !important\",\r\n              }}\r\n            >\r\n              {data.country}\r\n            </Link>\r\n          </td>\r\n          <td>{data.timeline.cases[currentDate].toLocaleString()}</td>\r\n          <td>{data.timeline.recovered[currentDate].toLocaleString()}</td>\r\n          <td>{data.timeline.deaths[currentDate].toLocaleString()}</td>\r\n        </tr>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"text-center m-4\">\r\n        <label className=\"m-0\" style={{ fontSize: \"120%\" }}>\r\n          Select Date\r\n        </label>\r\n        <DropdownButton\r\n          variant=\"dark\"\r\n          id=\"dropdown-basic-button\"\r\n          title={currentDate}\r\n          // style={{ height: \"200px\", overflowY: \"scroll\" }}\r\n        >\r\n          {dateList.map((date, index) => {\r\n            return (\r\n              <Dropdown.Item href=\"#\" onClick={() => handleCurrentdate(date)}>\r\n                {date}\r\n              </Dropdown.Item>\r\n            );\r\n          })}\r\n        </DropdownButton>\r\n      </div>\r\n      <Table striped responsive bordered hover variant=\"success\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Country Name</th>\r\n            <th>Total Cases</th>\r\n            <th>Recovered Cases</th>\r\n            <th>Deaths</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr style={{ backgroundColor: \"#dc3545\", color: \"white\" }}>\r\n            <td>1</td>\r\n            <td>World</td>\r\n            <td>{historicWorld.cases[currentDate].toLocaleString()}</td>\r\n            <td>{historicWorld.recovered[currentDate].toLocaleString()}</td>\r\n            <td>{historicWorld.deaths[currentDate].toLocaleString()}</td>\r\n          </tr>\r\n          {historicData.map(makeTable)}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Header } from \"./Historic/Header\";\r\nimport { HistoricTable } from \"./Historic/HistoricTable\";\r\n\r\nexport const Historic = ({\r\n  historicData,\r\n  historicWorld,\r\n  getSearch,\r\n  dateList,\r\n  getCountryName,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Header getSearch={getSearch} />\r\n      <HistoricTable\r\n        historicData={historicData}\r\n        historicWorld={historicWorld}\r\n        dateList={dateList}\r\n        getCountryName={getCountryName}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        bg=\"light\"\r\n        expand=\"lg\"\r\n        style={{ boxShadow: \"0px 0px 10px 5px gray\", marginTop: \"0.5%\" }}\r\n      >\r\n        <Navbar.Brand href=\"/\">Corona Live Statistics</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\r\n          <Nav className=\"mr-auto\">\r\n            <Link to=\"/Corona_Statistics\">\r\n              <div className=\"btn btn-primary m-2\">Home</div>\r\n            </Link>\r\n            <Link to=\"/historic\">\r\n              <div className=\"btn btn-primary m-2\">Historic</div>\r\n            </Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport \"./styles/countryCard.css\";\r\n\r\nexport const CountryCard = ({ oneCountryData }) => {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col className=\"m-4 text-center\">\r\n          <Card>\r\n            <Card.Header className=\"d-flex justify-content-between\">\r\n              {oneCountryData.country}\r\n              <div>Till Date</div>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <div className=\"important-detail bg-danger text-center\">\r\n                Active Cases: <b>{oneCountryData.active.toLocaleString()}</b>\r\n              </div>\r\n              <div>\r\n                Total Cases: <b>{oneCountryData.cases.toLocaleString()}</b>\r\n              </div>\r\n              <div>\r\n                Recovered Cases:{\" \"}\r\n                <b>{oneCountryData.recovered.toLocaleString()}</b>\r\n              </div>\r\n              <div>\r\n                Deaths: <b>{oneCountryData.deaths.toLocaleString()}</b>\r\n              </div>\r\n              <div>\r\n                Tests: <b>{oneCountryData.tests.toLocaleString()}</b>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col className=\"m-4 text-center\">\r\n          <Card>\r\n            <Card.Header className=\"d-flex justify-content-between\">\r\n              {oneCountryData.country} <div>Today</div>{\" \"}\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <div className=\"important-detail bg-danger\">\r\n                New Cases: <b>{oneCountryData.todayCases.toLocaleString()}</b>\r\n              </div>\r\n              <div>\r\n                New Recovered:{\" \"}\r\n                <b>{oneCountryData.todayRecovered.toLocaleString()}</b>\r\n              </div>\r\n              <div>\r\n                New Deaths: <b>{oneCountryData.todayDeaths.toLocaleString()}</b>\r\n              </div>\r\n\r\n              <div>\r\n                Critical: <b>{oneCountryData.critical.toLocaleString()}</b>\r\n              </div>\r\n              <div>\r\n                {\" \"}\r\n                Case per people:\r\n                <b>{oneCountryData.oneCasePerPeople.toLocaleString()}</b>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col className=\"m-4 text-center\">\r\n          <Card>\r\n            <Card.Header className=\"d-flex justify-content-between\">\r\n              {oneCountryData.country} <div>Per Million</div>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <div className=\"important-detail bg-danger \">\r\n                Active Per Million:{\" \"}\r\n                <b>{oneCountryData.activePerOneMillion.toLocaleString()}</b>\r\n              </div>\r\n              <div>\r\n                Total Per Million:{\" \"}\r\n                <b>{oneCountryData.casesPerOneMillion.toLocaleString()}</b>\r\n              </div>\r\n              <div>\r\n                Recovered Per Million:{\" \"}\r\n                <b>{oneCountryData.recoveredPerOneMillion.toLocaleString()}</b>\r\n              </div>\r\n              <div>\r\n                Deaths Per Million:{\" \"}\r\n                <b>{oneCountryData.deathsPerOneMillion.toLocaleString()}</b>\r\n              </div>\r\n              <div>\r\n                Tests Per Million:{\" \"}\r\n                <b>{oneCountryData.testsPerOneMillion.toLocaleString()}</b>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Header } from \"./Country/Header\";\r\nimport { CountryCard } from \"./Country/CountryCard\";\r\n\r\nexport const Country = ({ oneCountryData }) => {\r\n  console.log(oneCountryData);\r\n  return (\r\n    <>\r\n      {oneCountryData.active && (\r\n        <div>\r\n          <Header />\r\n          <CountryCard oneCountryData={oneCountryData} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport { Loader } from \"./Common/Loader\";\nimport { Main } from \"./Components/Main\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Historic } from \"./Components/Historic\";\nimport { Country } from \"./Components/Country\";\n\nexport const App = () => {\n  const [loading, setLoading] = useState(true);\n  const [countryList, setCountryList] = useState([]);\n  const [data, setData] = useState([]);\n  const [worldData, setWorldData] = useState({});\n  const [historicData, setHistoricData] = useState({});\n  const [historicList, setHistoricList] = useState({});\n  const [historicWorld, setHistoricWorld] = useState({});\n  const [dateList, setDateList] = useState([]);\n  const [sortValue, setSortValue] = useState(\"active\");\n  const [oneCountryData, setOneCountryData] = useState({});\n  const [countryName, setCountryName] = useState(\"\");\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchData = async () => {\n      let res = await fetch(\"https://corona.lmao.ninja/v2/countries\", {\n        method: \"GET\",\n      });\n      let json = await res.json();\n      setCountryList(json.sort((a, b) => b.active - a.active));\n      setData(json);\n      let resWorld = await fetch(\"https://corona.lmao.ninja/v2/all\", {\n        method: \"GET\",\n      });\n      let jsonWorld = await resWorld.json();\n      setWorldData(jsonWorld);\n      let resHistoric = await fetch(\"https://corona.lmao.ninja/v2/historical\", {\n        method: \"GET\",\n      });\n      let jsonHistoric = await resHistoric.json();\n      setHistoricData(jsonHistoric);\n      setHistoricList(jsonHistoric);\n      console.log(jsonHistoric);\n      let resHistoricWorld = await fetch(\n        \"https://corona.lmao.ninja/v2/historical/all\",\n        {\n          method: \"GET\",\n        }\n      );\n      let jsonHistoricWorld = await resHistoricWorld.json();\n      let dateArray = Object.keys(jsonHistoricWorld.cases);\n      setDateList(dateArray.reverse());\n      setHistoricWorld(jsonHistoricWorld);\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  const handleSearch = (searchText) => {\n    let reg = new RegExp(searchText, \"i\");\n    let countryListNew = data.filter((c) => c.country.match(reg));\n    setCountryList(countryListNew);\n  };\n  const handleHistoricSearch = (searchText) => {\n    let reg = new RegExp(searchText, \"i\");\n    let newHistoric = historicList.filter((c) => c.country.match(reg));\n    setHistoricData(newHistoric);\n  };\n  const handleSort = (sortStatus) => {\n    let countryListNew;\n    if (sortStatus == \"countryName\") {\n      countryListNew = data.sort((a, b) => (a.country > b.country ? 1 : -1));\n    } else if (sortStatus == \"newCases\") {\n      countryListNew = data.sort((a, b) => b.todayCases - a.todayCases);\n    } else if (sortStatus == \"total\") {\n      countryListNew = data.sort((a, b) => b.cases - a.cases);\n    } else if (sortStatus == \"active\") {\n      countryListNew = data.sort((a, b) => b.active - a.active);\n    } else if (sortStatus == \"recovered\") {\n      countryListNew = data.sort((a, b) => b.recovered - a.recovered);\n    } else if (sortStatus == \"deaths\") {\n      countryListNew = data.sort((a, b) => b.deaths - a.deaths);\n    } else if (sortStatus == \"tests\") {\n      countryListNew = data.sort((a, b) => b.tests - a.tests);\n    }\n    console.log(countryListNew);\n    setCountryList([...countryListNew]);\n    setSortValue(sortStatus);\n  };\n  const handleCountry = (countryName) => {\n    setCountryName(countryName);\n    data.map((item) => {\n      if (item.country == countryName) {\n        setOneCountryData(item);\n      }\n    });\n  };\n  console.log(countryName);\n  return (\n    <>\n      {loading ? (\n        <>\n          <Loader />\n        </>\n      ) : (\n        <Router>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => (\n                <Main\n                  countryList={countryList}\n                  worldData={worldData}\n                  getSearch={handleSearch}\n                  sortStatus={handleSort}\n                  sortValue={sortValue}\n                  getCountryName={handleCountry}\n                  {...props}\n                />\n              )}\n            />\n            <Route\n              path=\"/Corona_Statistics\"\n              exact\n              render={(props) => (\n                <Main\n                  countryList={countryList}\n                  worldData={worldData}\n                  getSearch={handleSearch}\n                  sortStatus={handleSort}\n                  sortValue={sortValue}\n                  getCountryName={handleCountry}\n                  {...props}\n                />\n              )}\n            />\n            <Route\n              path=\"/historic\"\n              exact\n              render={(props) => (\n                <Historic\n                  historicData={historicData}\n                  historicWorld={historicWorld}\n                  dateList={dateList}\n                  getSearch={handleHistoricSearch}\n                  getCountryName={handleCountry}\n                  {...props}\n                />\n              )}\n            />\n            <Route\n              path={`/${countryName}`}\n              exact\n              render={(props) => (\n                <Country oneCountryData={oneCountryData} {...props} />\n              )}\n            />\n          </Switch>\n        </Router>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}